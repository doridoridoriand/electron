From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Stefan Smolen <ssmole@microsoft.com>
Date: Tue, 10 Dec 2024 19:38:18 +0000
Subject: [reland] Set app container ACLs reliably on out directory

This is a reland of:
https://chromium-review.googlesource.com/c/chromium/src/+/6068009

Reverted due to cross-compile failures. This cl adds host_os checks.

Original description:
> Sandbox on Windows relies on AppContainer sandbox for certain sandboxes.
> The AppContainer sandbox requires that files loaded in those processes
> have the right security attributes (ACLs), or they will not be allowed
> to load. We can set the security attributes for a local build using the
> icacls tool, which currently runs when //sandbox/win:sandbox target is
> built, ensuring it happens as part of building chrome.dll.
>
> The APIs used for ACL-ing by icacls are subject to race conditions when
> files are generated in the folder while it's running, as is the case
> with a chromium build for binaries such as component build dlls and
> chrome_elf.dll.
>
> This change resolves the race condition by ensuring the ACL-ing step
> will happen via a DEPS of each executable target by default, which
> should guarantee that icacls finishes running before we link any
> binaries which require it.

Bug: 379656387
Change-Id: I45ee0d42934ab5cac4a24498f1f4ca9d0b3fb551
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/6081378
Reviewed-by: Dirk Pranke <dpranke@google.com>
Commit-Queue: Stefan Smolen <ssmole@microsoft.com>
Reviewed-by: Will Harris <wfh@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1394456}

diff --git a/build/config/BUILD.gn b/build/config/BUILD.gn
index 6f8cb29dbb18a144f572f4fb32633d7bec080eb7..d32152894f3483fe8e7cecc74e9b302f5649da2b 100644
--- a/build/config/BUILD.gn
+++ b/build/config/BUILD.gn
@@ -272,12 +272,14 @@ group("common_deps_without_libcxx") {
     # debugging DLLs in all builds.
     data_deps = [ "//build/win:runtime_libs" ]
 
-    # In order to ensure the ACLing is applied to every binary loaded in an
-    # app container sandbox, run the ACL step before any binary is built. We
-    # do this because the tool is subject to race conditions if a binary is
-    # placed in the out folder while it is running.
-    public_deps +=
-        [ "//build/config/win:maybe_set_appcontainer_acls($host_toolchain)" ]
+    if (host_os == "win") {
+      # In order to ensure the ACLing is applied to every binary loaded in an
+      # app container sandbox, run the ACL step before any binary is built. We
+      # do this because the tool is subject to race conditions if a binary is
+      # placed in the out folder while it is running.
+      public_deps +=
+          [ "//build/config/win:maybe_set_appcontainer_acls($host_toolchain)" ]
+    }
   }
 }
 
diff --git a/build/config/win/BUILD.gn b/build/config/win/BUILD.gn
index a75b2b09cf708ffb3d60a07cd31f78bc80075913..9928e76832cce20cead2531293d872b8af520336 100644
--- a/build/config/win/BUILD.gn
+++ b/build/config/win/BUILD.gn
@@ -483,12 +483,12 @@ config("delayloads_not_for_child_dll") {
 # sandboxed processes in an app container when run from the out directory.
 group("maybe_set_appcontainer_acls") {
   # Exclude setting ACLs when build is not happening on chromium, or with a different toolchain.
-  if (build_with_chromium && current_cpu == target_cpu) {
+  if (build_with_chromium && current_cpu == target_cpu && host_os == "win") {
     deps = [ ":set_appcontainer_acls" ]
   }
 }
 
-if (build_with_chromium && current_cpu == target_cpu) {
+if (build_with_chromium && current_cpu == target_cpu && host_os == "win") {
   action("set_appcontainer_acls") {
     script = "//build/win/set_appcontainer_acls.py"
     stamp_file = "$target_out_dir/acls.stamp"
